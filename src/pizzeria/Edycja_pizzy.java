/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pizzeria;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author SK
 */
public class Edycja_pizzy extends javax.swing.JFrame {

    Connection con;
    Statement stmt1, stmt2, stmt3, stmt4, stmt5;
    ResultSet res1, res2, res3, res4, res5;
    DefaultTableModel model;
    float cena = 0;
    //int usunieto = 0;

    /**
     * Creates new form Edycja_pizzy
     */
    public Edycja_pizzy() {
        initComponents();
        panel_edycja.setVisible(false);
        model = (DefaultTableModel) tabelka.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        przegladaj = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelka = new javax.swing.JTable();
        dodajdobazy = new javax.swing.JButton();
        usun = new javax.swing.JButton();
        edytuj = new javax.swing.JButton();
        panel_edycja = new javax.swing.JPanel();
        POLENR = new javax.swing.JTextField();
        NUMER = new javax.swing.JLabel();
        POLENAZWA = new javax.swing.JTextField();
        NAZWA = new javax.swing.JLabel();
        SKLADNIKI = new javax.swing.JLabel();
        POLESKLADNIKI = new javax.swing.JTextField();
        POLECIASTO = new javax.swing.JTextField();
        POLEROZMIAR = new javax.swing.JTextField();
        POLECENA = new javax.swing.JTextField();
        POLEDOST = new javax.swing.JTextField();
        CIASTO = new javax.swing.JLabel();
        ROZMIAR = new javax.swing.JLabel();
        CENA = new javax.swing.JLabel();
        DOSTEPNOSC = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        zapisz = new javax.swing.JButton();
        powrot = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        przegladaj.setText("Przeglądaj menu");
        przegladaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przegladajActionPerformed(evt);
            }
        });

        tabelka.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NR", "NAZWA", "SKŁADNIKI", "CIASTO", "ROZMIAR", "CENA", "DOSTĘPNOŚĆ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelka);
        if (tabelka.getColumnModel().getColumnCount() > 0) {
            tabelka.getColumnModel().getColumn(0).setMinWidth(30);
            tabelka.getColumnModel().getColumn(0).setPreferredWidth(30);
            tabelka.getColumnModel().getColumn(0).setMaxWidth(30);
            tabelka.getColumnModel().getColumn(1).setPreferredWidth(40);
            tabelka.getColumnModel().getColumn(2).setPreferredWidth(400);
            tabelka.getColumnModel().getColumn(2).setMaxWidth(400);
            tabelka.getColumnModel().getColumn(3).setPreferredWidth(30);
            tabelka.getColumnModel().getColumn(4).setPreferredWidth(30);
            tabelka.getColumnModel().getColumn(5).setPreferredWidth(30);
            tabelka.getColumnModel().getColumn(6).setPreferredWidth(30);
        }

        dodajdobazy.setText("Dodaj");
        dodajdobazy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajdobazyActionPerformed(evt);
            }
        });

        usun.setText("Usuń");
        usun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usunActionPerformed(evt);
            }
        });

        edytuj.setText("Edytuj");
        edytuj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edytujActionPerformed(evt);
            }
        });

        POLENR.setEditable(false);
        POLENR.setPreferredSize(new java.awt.Dimension(10, 25));
        POLENR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                POLENRActionPerformed(evt);
            }
        });

        NUMER.setText("NR");

        POLENAZWA.setPreferredSize(new java.awt.Dimension(10, 25));

        NAZWA.setText("NAZWA");

        SKLADNIKI.setText("SKŁADNIKI");

        CIASTO.setText("CIASTO");

        ROZMIAR.setText("ROZMIAR");

        CENA.setText("CENA (ZŁ)");

        DOSTEPNOSC.setText("DOSTĘPNOŚĆ");

        jButton1.setText("Anuluj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        zapisz.setText("Zapisz");
        zapisz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zapiszActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_edycjaLayout = new javax.swing.GroupLayout(panel_edycja);
        panel_edycja.setLayout(panel_edycjaLayout);
        panel_edycjaLayout.setHorizontalGroup(
            panel_edycjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_edycjaLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(panel_edycjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(POLENR, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NUMER))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_edycjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NAZWA)
                    .addComponent(POLENAZWA, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_edycjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(POLESKLADNIKI, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SKLADNIKI))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_edycjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(POLECIASTO, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CIASTO))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_edycjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(POLEROZMIAR, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ROZMIAR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_edycjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(POLECENA, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CENA))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_edycjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(POLEDOST, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DOSTEPNOSC))
                .addGap(16, 16, 16)
                .addComponent(zapisz, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108))
        );
        panel_edycjaLayout.setVerticalGroup(
            panel_edycjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_edycjaLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(panel_edycjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_edycjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(zapisz, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_edycjaLayout.createSequentialGroup()
                        .addGroup(panel_edycjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NAZWA)
                            .addComponent(SKLADNIKI)
                            .addComponent(CIASTO)
                            .addComponent(ROZMIAR)
                            .addComponent(CENA)
                            .addComponent(DOSTEPNOSC)
                            .addComponent(NUMER))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_edycjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(POLENR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(POLENAZWA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel_edycjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(POLESKLADNIKI, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(POLECIASTO, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(POLEROZMIAR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(POLECENA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(POLEDOST, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        powrot.setText("Powrót");
        powrot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powrotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(usun, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(edytuj, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(dodajdobazy, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel_edycja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(przegladaj, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(powrot, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(przegladaj, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(powrot, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usun, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dodajdobazy, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edytuj, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(panel_edycja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void przegladajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przegladajActionPerformed
        if (przegladaj.isSelected() == true) {

            tabelka.setVisible(true);
            czysctabelke();
            przegladaj(model);
        } else {
            tabelka.setVisible(false);
            panel_edycja.setVisible(false);

        }


    }//GEN-LAST:event_przegladajActionPerformed

    private void dodajdobazyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajdobazyActionPerformed

        panel_edycja.setVisible(true);
         int numer = tabelka.getRowCount() + 1;
        POLENR.setText(numer+"");
       
    }//GEN-LAST:event_dodajdobazyActionPerformed

    private void edytujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edytujActionPerformed
        panel_edycja.setVisible(true);
         int numer = tabelka.getSelectedRow()+1;
        POLENR.setText(numer+"");


    }//GEN-LAST:event_edytujActionPerformed

    private void usunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usunActionPerformed

      
        int j = tabelka.getRowCount();
        String ostt = tabelka.getValueAt(j - 1, 0).toString();
        int ost = Integer.parseInt(ostt);
        if (tabelka.getSelectedRowCount() > 0) {
            int wiersz = tabelka.getSelectedRow();
            String s = tabelka.getValueAt(wiersz, 0).toString();

            String usunwiersz = "delete from pizzeria.menu_pizza where id_pizzy=" + s;
            try {
                con = DriverManager.getConnection(
                        "jdbc:derby://localhost:1527/BazaPizzerii", "pizzeria", "pizzeria"
                );
            } catch (SQLException ex) {
                Logger.getLogger(Edycja_pizzy.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                stmt5 = con.createStatement();
                stmt5.executeUpdate(usunwiersz);
                int id1 = Integer.parseInt(s);
                id1++;
                for (int i = id1; i <= ost; i++) {
                    String naprawid = "UPDATE menu_pizza SET id_pizzy =" + (i - 1) + " WHERE id_pizzy =" + i;
                    stmt5.executeUpdate(naprawid);
                }

            } catch (SQLException ex) {
                Logger.getLogger(Edycja_pizzy.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        czysctabelke();
        przegladaj(model);


    }//GEN-LAST:event_usunActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        panel_edycja.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void zapiszActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zapiszActionPerformed

        int numer = tabelka.getRowCount() + 1;
        
        String nazwa = POLENAZWA.getText();
        String skladniki = POLESKLADNIKI.getText();
        String ciasto = POLECIASTO.getText();
        String rozmiar = POLEROZMIAR.getText();
        if (POLECENA.getText() != null && POLECENA.getText().length() > 0) {
            cena = Float.parseFloat(POLECENA.getText());
        }
        String dostepnosc = POLEDOST.getText();
        try {
            con = DriverManager.getConnection(
                    "jdbc:derby://localhost:1527/BazaPizzerii", "pizzeria", "pizzeria"
            );
            stmt3 = con.createStatement();
            String insert = "";
            if (tabelka.getSelectedRow() < 0) {
                insert = "INSERT INTO MENU_PIZZA VALUES(" + numer + ",'" + nazwa + "','" + skladniki + "','" + ciasto + "','" + rozmiar + "'," + cena + ",'" + dostepnosc + "')";
            } else {
       
                int wiersz = tabelka.getSelectedRow();
                String s = tabelka.getValueAt(wiersz, 0).toString();
                
                insert = "UPDATE menu_pizza SET nazwa='" + nazwa + "', skladniki='" + skladniki + "', ciasto='" + ciasto
                        + "', rozmiar='" + rozmiar + "', cena_pizza=" + cena + ", dostepnosc='" + dostepnosc + "' WHERE id_pizzy=" + s;
            }
            stmt3.executeUpdate(insert);
        } catch (Exception e) {
            // JOptionPane.showMessageDialog(null, "Błąd zapisu - brak połączenia z bazą danych");
        }
    }//GEN-LAST:event_zapiszActionPerformed

    private void POLENRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_POLENRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_POLENRActionPerformed

    private void powrotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powrotActionPerformed
        Zamowienia zam = new Zamowienia();
         zam.setVisible(true);
        dispose();
    }//GEN-LAST:event_powrotActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Edycja_pizzy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Edycja_pizzy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Edycja_pizzy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Edycja_pizzy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Edycja_pizzy().setVisible(true);
            }
        });
    }

    void przegladaj(DefaultTableModel model) {

        // model = (DefaultTableModel) tabelka.getModel();
        // model.removeTableModelListener(tabelka);
        try {
            con = DriverManager.getConnection(
                    "jdbc:derby://localhost:1527/BazaPizzerii", "pizzeria", "pizzeria"
            );
            stmt1 = con.createStatement();
            res1 = stmt1.executeQuery(
                    "select * from MENU_PIZZA"
            );
            stmt2 = con.createStatement();
            res2 = stmt2.executeQuery(
                    "select count(*) from MENU_PIZZA "
            );
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Brak połączenia z bazą danych");
        }
        try {

            // if (model.getRowCount() == 0) {
            //usunieto = 0;
            while (res1.next()) {

                int nr = res1.getInt("id_pizzy");
                String nazwa = res1.getString("nazwa");
                String skladniki = res1.getString("skladniki");
                String ciasto = res1.getString("ciasto");
                String rozmiar = res1.getString("rozmiar");
                String cena = res1.getDouble("cena_pizza") + " zł";
                String dostepnosc = res1.getString("dostepnosc");
                Object[] row = {nr, nazwa, skladniki, ciasto, rozmiar, cena, dostepnosc};
                model.addRow(row);

            }

        } catch (SQLException ex) {
            Logger.getLogger(Edycja_pizzy.class.getName()).log(Level.SEVERE, null, ex);
        }
        tabelka.setModel(model);

    }

    void czysctabelke() {
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CENA;
    private javax.swing.JLabel CIASTO;
    private javax.swing.JLabel DOSTEPNOSC;
    private javax.swing.JLabel NAZWA;
    private javax.swing.JLabel NUMER;
    private javax.swing.JTextField POLECENA;
    private javax.swing.JTextField POLECIASTO;
    private javax.swing.JTextField POLEDOST;
    private javax.swing.JTextField POLENAZWA;
    private javax.swing.JTextField POLENR;
    private javax.swing.JTextField POLEROZMIAR;
    private javax.swing.JTextField POLESKLADNIKI;
    private javax.swing.JLabel ROZMIAR;
    private javax.swing.JLabel SKLADNIKI;
    private javax.swing.JButton dodajdobazy;
    private javax.swing.JButton edytuj;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel_edycja;
    private javax.swing.JToggleButton powrot;
    private javax.swing.JToggleButton przegladaj;
    private javax.swing.JTable tabelka;
    private javax.swing.JButton usun;
    private javax.swing.JButton zapisz;
    // End of variables declaration//GEN-END:variables
}
